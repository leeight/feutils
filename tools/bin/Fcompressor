#!/bin/bash

. `dirname $0`/Futils.inc

# define command-line options
DEFINE_string 'in' '' 'input file'
DEFINE_string 'type' '' 'input file type, only support js, css, html'
DEFINE_string 'engine' 'yui' 'which engine to use, only support yui, ecui, gcc (google closure compiler)'
DEFINE_string 'out' 'Fcompressor.out' 'output file'
DEFINE_string 'options' '' 'extra options for specified engine'

# parse the command-line
FLAGS "$@" || exit 1
eval set -- "${FLAGS_ARGV}"

# check the inputs
[ ! -f "${FLAGS_in}" ] && die "no such file (${FLAGS_in})"

type="${FLAGS_type}"
case "${type}" in
  '') die ;;

  js|css|html)
    echo "launch ${type}"
    ;;

  *) die "can't support such type (${type})" ;;
esac

engine="${FLAGS_engine}"
case ${engine} in
  '') die ;;
  
  yui|ecui|gcc)
    echo "launch ${engine} engine"
    ;;

  *) die "can't support such engine (${engine})";
esac

echo "${FLAGS_in}"
echo "${FLAGS_type}"
echo "${FLAGS_engine}"
echo "${FLAGS_out}"

if [ "${type}" = "js" ]; then
  if [ "${engine}" = "yui" ]; then
    java -jar "${YUI_JAR}" ${FLAGS_options} -o "${FLAGS_out}" --type js "${FLAGS_in}"
  elif [ "${engine}" = "ecui" ]; then
    echo ''
  elif [ "${engine}" = "gcc" ]; then
    java -jar "${GCC_JAR}" ${FLAGS_options} --js_output_file "${FLAGS_out}" --js "${FLAGS_in}"
  fi
elif [ "${type}" = "css" ]; then
  java -jar "${YUI_JAR}" ${FLAGS_options} -o "${FLAGS_out}" --type css "${FLAGS_in}"
elif [ "${type}" = "html" ]; then
  echo ''
fi
